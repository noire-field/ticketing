# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke

name: Build and Deploy to GKE

on:
  push:
    branches: 
      - master
    paths:
      - 'Auth/**'
      
env:
  DOCKER_IMAGE: noirefield/ticketing-auth
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ticketing       # TODO: update to cluster name
  GKE_ZONE: asia-southeast1-a   # TODO: update to cluster zone
  DEPLOYMENT_NAME: auth-depl     # TODO: update to deployment name

jobs:
  Build-Push-Deploy:
    name: Build - Push - Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Docker - Build Image
      run: cd Auth && docker build -t $DOCKER_IMAGE .
      
    - name: Docker - Login to DockerHub
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      
    # Push the Docker image to Google Container Registry
    - name: Docker - Push Image
      run: docker push $DOCKER_IMAGE

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        cd Infra/K8S
        kubectl rollout restart deployment $DEPLOYMENT_NAME
